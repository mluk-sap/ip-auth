// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kyma-project/ip-auth/cpms/model"
)

// GetV2ListsProjectIDPolicyIDReader is a Reader for the GetV2ListsProjectIDPolicyID structure.
type GetV2ListsProjectIDPolicyIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV2ListsProjectIDPolicyIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV2ListsProjectIDPolicyIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 206:
		result := NewGetV2ListsProjectIDPolicyIDPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetV2ListsProjectIDPolicyIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetV2ListsProjectIDPolicyIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV2ListsProjectIDPolicyIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV2ListsProjectIDPolicyIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV2ListsProjectIDPolicyIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetV2ListsProjectIDPolicyIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v2/lists/{projectID}/{policyID}] GetV2ListsProjectIDPolicyID", response, response.Code())
	}
}

// NewGetV2ListsProjectIDPolicyIDOK creates a GetV2ListsProjectIDPolicyIDOK with default headers values
func NewGetV2ListsProjectIDPolicyIDOK() *GetV2ListsProjectIDPolicyIDOK {
	return &GetV2ListsProjectIDPolicyIDOK{}
}

/*
GetV2ListsProjectIDPolicyIDOK describes a response with status code 200, with default header values.

OK
*/
type GetV2ListsProjectIDPolicyIDOK struct {

	/* Entity tag of the policy version
	 */
	ETag string

	/* Active policy version last modified date in [HTTP-date format](https://www.rfc-editor.org/rfc/rfc9110.html#name-last-modified)
	 */
	LastModified string

	/* Active policy version
	 */
	PolicyVersion string

	Payload []*model.PolicyActivePolicy
}

// IsSuccess returns true when this get v2 lists project Id policy Id o k response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v2 lists project Id policy Id o k response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v2 lists project Id policy Id o k response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v2 lists project Id policy Id o k response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v2 lists project Id policy Id o k response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v2 lists project Id policy Id o k response
func (o *GetV2ListsProjectIDPolicyIDOK) Code() int {
	return 200
}

func (o *GetV2ListsProjectIDPolicyIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdOK %s", 200, payload)
}

func (o *GetV2ListsProjectIDPolicyIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdOK %s", 200, payload)
}

func (o *GetV2ListsProjectIDPolicyIDOK) GetPayload() []*model.PolicyActivePolicy {
	return o.Payload
}

func (o *GetV2ListsProjectIDPolicyIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header Policy-Version
	hdrPolicyVersion := response.GetHeader("Policy-Version")

	if hdrPolicyVersion != "" {
		o.PolicyVersion = hdrPolicyVersion
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV2ListsProjectIDPolicyIDPartialContent creates a GetV2ListsProjectIDPolicyIDPartialContent with default headers values
func NewGetV2ListsProjectIDPolicyIDPartialContent() *GetV2ListsProjectIDPolicyIDPartialContent {
	return &GetV2ListsProjectIDPolicyIDPartialContent{}
}

/*
GetV2ListsProjectIDPolicyIDPartialContent describes a response with status code 206, with default header values.

The result is only returned partially. Check Link header for other pages.
*/
type GetV2ListsProjectIDPolicyIDPartialContent struct {

	/* Entity tag of the policy version
	 */
	ETag string

	/* Active policy version last modified date in [HTTP-date format](https://www.rfc-editor.org/rfc/rfc9110.html#name-last-modified)
	 */
	LastModified string

	/* Links to other pages of the resource, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5)
	 */
	Link string

	/* Active policy version
	 */
	PolicyVersion string

	Payload []*model.PolicyActivePolicy
}

// IsSuccess returns true when this get v2 lists project Id policy Id partial content response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDPartialContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v2 lists project Id policy Id partial content response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDPartialContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v2 lists project Id policy Id partial content response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDPartialContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v2 lists project Id policy Id partial content response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDPartialContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get v2 lists project Id policy Id partial content response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDPartialContent) IsCode(code int) bool {
	return code == 206
}

// Code gets the status code for the get v2 lists project Id policy Id partial content response
func (o *GetV2ListsProjectIDPolicyIDPartialContent) Code() int {
	return 206
}

func (o *GetV2ListsProjectIDPolicyIDPartialContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdPartialContent %s", 206, payload)
}

func (o *GetV2ListsProjectIDPolicyIDPartialContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdPartialContent %s", 206, payload)
}

func (o *GetV2ListsProjectIDPolicyIDPartialContent) GetPayload() []*model.PolicyActivePolicy {
	return o.Payload
}

func (o *GetV2ListsProjectIDPolicyIDPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header Link
	hdrLink := response.GetHeader("Link")

	if hdrLink != "" {
		o.Link = hdrLink
	}

	// hydrates response header Policy-Version
	hdrPolicyVersion := response.GetHeader("Policy-Version")

	if hdrPolicyVersion != "" {
		o.PolicyVersion = hdrPolicyVersion
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV2ListsProjectIDPolicyIDNotModified creates a GetV2ListsProjectIDPolicyIDNotModified with default headers values
func NewGetV2ListsProjectIDPolicyIDNotModified() *GetV2ListsProjectIDPolicyIDNotModified {
	return &GetV2ListsProjectIDPolicyIDNotModified{}
}

/*
GetV2ListsProjectIDPolicyIDNotModified describes a response with status code 304, with default header values.

Not Modified
*/
type GetV2ListsProjectIDPolicyIDNotModified struct {

	/* Entity tag of the policy version
	 */
	ETag string

	/* Active policy version last modified date in [HTTP-date format](https://www.rfc-editor.org/rfc/rfc9110.html#name-last-modified)
	 */
	LastModified string

	/* Active policy version
	 */
	PolicyVersion string
}

// IsSuccess returns true when this get v2 lists project Id policy Id not modified response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDNotModified) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v2 lists project Id policy Id not modified response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDNotModified) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get v2 lists project Id policy Id not modified response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDNotModified) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v2 lists project Id policy Id not modified response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDNotModified) IsServerError() bool {
	return false
}

// IsCode returns true when this get v2 lists project Id policy Id not modified response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDNotModified) IsCode(code int) bool {
	return code == 304
}

// Code gets the status code for the get v2 lists project Id policy Id not modified response
func (o *GetV2ListsProjectIDPolicyIDNotModified) Code() int {
	return 304
}

func (o *GetV2ListsProjectIDPolicyIDNotModified) Error() string {
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdNotModified", 304)
}

func (o *GetV2ListsProjectIDPolicyIDNotModified) String() string {
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdNotModified", 304)
}

func (o *GetV2ListsProjectIDPolicyIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header ETag
	hdrETag := response.GetHeader("ETag")

	if hdrETag != "" {
		o.ETag = hdrETag
	}

	// hydrates response header Last-Modified
	hdrLastModified := response.GetHeader("Last-Modified")

	if hdrLastModified != "" {
		o.LastModified = hdrLastModified
	}

	// hydrates response header Policy-Version
	hdrPolicyVersion := response.GetHeader("Policy-Version")

	if hdrPolicyVersion != "" {
		o.PolicyVersion = hdrPolicyVersion
	}

	return nil
}

// NewGetV2ListsProjectIDPolicyIDBadRequest creates a GetV2ListsProjectIDPolicyIDBadRequest with default headers values
func NewGetV2ListsProjectIDPolicyIDBadRequest() *GetV2ListsProjectIDPolicyIDBadRequest {
	return &GetV2ListsProjectIDPolicyIDBadRequest{}
}

/*
GetV2ListsProjectIDPolicyIDBadRequest describes a response with status code 400, with default header values.

Failed to validate the request
*/
type GetV2ListsProjectIDPolicyIDBadRequest struct {
	Payload *model.APIErrorResponse
}

// IsSuccess returns true when this get v2 lists project Id policy Id bad request response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v2 lists project Id policy Id bad request response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v2 lists project Id policy Id bad request response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v2 lists project Id policy Id bad request response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v2 lists project Id policy Id bad request response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v2 lists project Id policy Id bad request response
func (o *GetV2ListsProjectIDPolicyIDBadRequest) Code() int {
	return 400
}

func (o *GetV2ListsProjectIDPolicyIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdBadRequest %s", 400, payload)
}

func (o *GetV2ListsProjectIDPolicyIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdBadRequest %s", 400, payload)
}

func (o *GetV2ListsProjectIDPolicyIDBadRequest) GetPayload() *model.APIErrorResponse {
	return o.Payload
}

func (o *GetV2ListsProjectIDPolicyIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV2ListsProjectIDPolicyIDForbidden creates a GetV2ListsProjectIDPolicyIDForbidden with default headers values
func NewGetV2ListsProjectIDPolicyIDForbidden() *GetV2ListsProjectIDPolicyIDForbidden {
	return &GetV2ListsProjectIDPolicyIDForbidden{}
}

/*
GetV2ListsProjectIDPolicyIDForbidden describes a response with status code 403, with default header values.

Access denied
*/
type GetV2ListsProjectIDPolicyIDForbidden struct {
}

// IsSuccess returns true when this get v2 lists project Id policy Id forbidden response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v2 lists project Id policy Id forbidden response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v2 lists project Id policy Id forbidden response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v2 lists project Id policy Id forbidden response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v2 lists project Id policy Id forbidden response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v2 lists project Id policy Id forbidden response
func (o *GetV2ListsProjectIDPolicyIDForbidden) Code() int {
	return 403
}

func (o *GetV2ListsProjectIDPolicyIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdForbidden", 403)
}

func (o *GetV2ListsProjectIDPolicyIDForbidden) String() string {
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdForbidden", 403)
}

func (o *GetV2ListsProjectIDPolicyIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetV2ListsProjectIDPolicyIDNotFound creates a GetV2ListsProjectIDPolicyIDNotFound with default headers values
func NewGetV2ListsProjectIDPolicyIDNotFound() *GetV2ListsProjectIDPolicyIDNotFound {
	return &GetV2ListsProjectIDPolicyIDNotFound{}
}

/*
GetV2ListsProjectIDPolicyIDNotFound describes a response with status code 404, with default header values.

Requested Policy not found
*/
type GetV2ListsProjectIDPolicyIDNotFound struct {
	Payload *model.APIErrorResponse
}

// IsSuccess returns true when this get v2 lists project Id policy Id not found response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v2 lists project Id policy Id not found response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v2 lists project Id policy Id not found response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v2 lists project Id policy Id not found response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v2 lists project Id policy Id not found response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v2 lists project Id policy Id not found response
func (o *GetV2ListsProjectIDPolicyIDNotFound) Code() int {
	return 404
}

func (o *GetV2ListsProjectIDPolicyIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdNotFound %s", 404, payload)
}

func (o *GetV2ListsProjectIDPolicyIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdNotFound %s", 404, payload)
}

func (o *GetV2ListsProjectIDPolicyIDNotFound) GetPayload() *model.APIErrorResponse {
	return o.Payload
}

func (o *GetV2ListsProjectIDPolicyIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV2ListsProjectIDPolicyIDInternalServerError creates a GetV2ListsProjectIDPolicyIDInternalServerError with default headers values
func NewGetV2ListsProjectIDPolicyIDInternalServerError() *GetV2ListsProjectIDPolicyIDInternalServerError {
	return &GetV2ListsProjectIDPolicyIDInternalServerError{}
}

/*
GetV2ListsProjectIDPolicyIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetV2ListsProjectIDPolicyIDInternalServerError struct {
	Payload *model.APIErrorResponse
}

// IsSuccess returns true when this get v2 lists project Id policy Id internal server error response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v2 lists project Id policy Id internal server error response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v2 lists project Id policy Id internal server error response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v2 lists project Id policy Id internal server error response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v2 lists project Id policy Id internal server error response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v2 lists project Id policy Id internal server error response
func (o *GetV2ListsProjectIDPolicyIDInternalServerError) Code() int {
	return 500
}

func (o *GetV2ListsProjectIDPolicyIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdInternalServerError %s", 500, payload)
}

func (o *GetV2ListsProjectIDPolicyIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdInternalServerError %s", 500, payload)
}

func (o *GetV2ListsProjectIDPolicyIDInternalServerError) GetPayload() *model.APIErrorResponse {
	return o.Payload
}

func (o *GetV2ListsProjectIDPolicyIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV2ListsProjectIDPolicyIDServiceUnavailable creates a GetV2ListsProjectIDPolicyIDServiceUnavailable with default headers values
func NewGetV2ListsProjectIDPolicyIDServiceUnavailable() *GetV2ListsProjectIDPolicyIDServiceUnavailable {
	return &GetV2ListsProjectIDPolicyIDServiceUnavailable{}
}

/*
GetV2ListsProjectIDPolicyIDServiceUnavailable describes a response with status code 503, with default header values.

Service unavailable
*/
type GetV2ListsProjectIDPolicyIDServiceUnavailable struct {
}

// IsSuccess returns true when this get v2 lists project Id policy Id service unavailable response has a 2xx status code
func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v2 lists project Id policy Id service unavailable response has a 3xx status code
func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v2 lists project Id policy Id service unavailable response has a 4xx status code
func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v2 lists project Id policy Id service unavailable response has a 5xx status code
func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get v2 lists project Id policy Id service unavailable response a status code equal to that given
func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get v2 lists project Id policy Id service unavailable response
func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) Code() int {
	return 503
}

func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdServiceUnavailable", 503)
}

func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /v2/lists/{projectID}/{policyID}][%d] getV2ListsProjectIdPolicyIdServiceUnavailable", 503)
}

func (o *GetV2ListsProjectIDPolicyIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
